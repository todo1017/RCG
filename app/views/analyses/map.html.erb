<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAyuizaz4I3YKup2sxgLT0-18M-rwVA8-Q" ></script>
<script src="https://d3js.org/d3.v3.min.js"></script>
<style type="text/css">
	#analyses-map {
		position: relative;
	}
	.stations, .stations svg {
		position: absolute;
	}
	.stations svg {
		width: 60px;
		height: 20px;
		padding-right: 100px;
		font: 10px sans-serif;
	}

	.stations circle {
		fill: brown;
		stroke: black;
		stroke-width: 1.5px;
	}
	g.states-names {
		cursor: pointer;
	}
	.building-info {
		width: 250px;
		padding: 20px;
	}
	.building-info .row {
		padding: 5px
	}
	.building-info .title {
		font-size: 24px;
		text-align: center;
		padding-bottom: 10px
	}
	.building-info .sub-title {
		font-size: 18px
	}
	.building-info .info {
		font-size: 18px
	}
	.building-info .owned b {
		color: red
	}
	.building-info .competitor b{
		color: blue
	}
	.building-info .owned .title{
		color: red
	}
	.building-info .competitor .title{
		color: blue
	}
	#states_list{
		padding: 5px;
	}
</style>
<div id="analyses-map">
</div>

<script>
	$('#analyses-map').height(window.innerHeight - 100);
	window.addEventListener("resize", function(){
		$('#analyses-map').height(window.innerHeight - 100);		
	});

	var lastOpenInfoWin = null;

	drawMap();

	function drawMap(){
		
		$.get("/analyses/api", { type : 'building_map'}, function(response){
			var len = response.buildings.length;
			var map = new google.maps.Map(d3.select("#analyses-map").node(), {
				mapTypeId: google.maps.MapTypeId.TERRAIN
			});
			var geocoder = new google.maps.Geocoder();
			var resultBounds = new google.maps.LatLngBounds();
			var c = 0;
			$.each(response.buildings, function(i, d){
				var info = ["US", d.state, d.city, d.addr];
				geocoder.geocode({address: info.join(" ")}, function (results) {
					c ++;
					if(results){
						var owned = "owned";
						var color = 'red';
						if(d.competitor == 't'){
							color = 'blue';
						}
						var marker = new google.maps.Marker({
							map: map,
							position: new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()),
							title: d.name + " : " + owned,
							icon: {
            					path: google.maps.SymbolPath.CIRCLE,
            					scale: 6,
            					fillColor: color,
            					fillOpacity: 0.8,
            					strokeColor: color,
            					strokeWeight: 4,
            					strokeOpacity: 0.2
          					}
						});
						createInfoWindow(marker, d);
						resultBounds.extend(results[0].geometry.viewport.getSouthWest());
						resultBounds.extend(results[0].geometry.viewport.getNorthEast());
						if(c == len){
							map.fitBounds(resultBounds);		
						}
					}
				});
			})
		});
	}

	function createInfoWindow(marker, info) {
		var owned = "owned";
		if(info.competitor == 't'){
			owned = "competitor";
		}
		//create an infowindow for this marker
		var html = ' \
			<div class="building-info"> \
				<div class="' + owned +'">\
					<div class="title" style="width:200px">' + info.name +'</div>\
					<div class="sub-title row">' +
						'<div class="pull-left"><b>' + info.units + '</b> units,</div> \
						<div class="pull-right"> Built in <b>' + info.year + '</b></div> \
					</div>' +
					'<div class="info row"> Occupancy <b class="pull-right">' + info.occupancy_rate +'%</b> </div> \
					<div class="info row"> Leased <b class="pull-right">' + info.leased_rate +'%</b> </div> \
				</div>\
			</div>';
		var infowindow = new google.maps.InfoWindow({
		  	content: html,
		  	minWidth:250
		});
		//open infowindo on click event on marker.
		google.maps.event.addListener(marker, 'click', function() {
			if(lastOpenInfoWin) lastOpenInfoWin.close();
			lastOpenInfoWin = infowindow;
		  	infowindow.open(marker.get('map'), marker);
		});
	}
</script>
